<!DOCTYPE html>
<html>
<head>
	<title>OpenSSL OCSP Status Request extension unbounded memory growth (CVE-2016-6304)</title>
	<meta http-equiv="Content-type" content="text/html; charset=UTF-8">
	<link rel="stylesheet" href="common.css" type="text/css">
	<link rel="shortcut icon" href="favicon.ico" type="image/vnd.microsoft.icon">
	<div id='wx_pic' style='margin:0 auto;display:none;'>
	<img src='logo-300.png' />
	</div>
</head>
<body>
    <div class="content">
		<p>
		    <a href="http://www.360.com/">
		        <img src="logo01.png" alt="logo" class="site_logo">
		    </a>
		</p>
		<p><a href="CN.html">[Chinese]</a></p>
		<p>Last update: Thursday, 22 September 2016 18:55:00 +0800</p>
		<h1 id="ccs-injection-vulnerability">OpenSSL OCSP Status Request extension unbounded memory growth (CVE-2016-6304)</h1>
		<h2 id="overview">Overview</h2>

		<p><img src="logo.png" alt="CCS-Injection logo" class="logo"></p>

		<p>There is a serious vulnerability in the OCSP Status Request extension of OpenSSL. This vulnerability allows malicious client to 
exhaust the server's memory. A server with default configuration would allow unbounded memory allocation of the OCSP ids every time a 
renegotiation occurs even if the server is not configured with OCSP. The OCSP id can, according to the spec, 
consume up to 65,535 bytes of memory. Theoretically, an attacker could continually reneg with the server thus causing unbounded memory growth on the server up to 64k each time. 
In 1.0.2 an attacker could grow the memory usage on the server by approx 16k per reneg as the maximum overall ClientHello size is set to 16,384 bytes. In version 1.1.0, along with the maximum size of a ClientHello increased to 
131,396 bytes, the memory growth would be near 64k per reneg. 
</p>
		<h2 id="countermeasures">Countermeasures</h2>
		<p>You can apply software updates from each software vendors. Refer to the URLs below.</p>

		<ul>
		    <li><a href="https://security-tracker.debian.org/tracker/CVE-2016-6304" title="Debian">Debian</a></li>
		    <li><a href="https://access.redhat.com/security/cve/CVE-2016-6304" title="Redhat/CentOS">Redhat/CentOS</a></li>
<!-- 
	            <li><a href="" title="Ubuntu">Ubuntu</a></li>
		    <li><a href="https://www.freebsd.org/security/advisories/FreeBSD-SA-14:14.openssl.asc" title="FreeBSD">FreeBSD</a></li>
		    <li><a href="https://aws.amazon.com/jp/security/security-bulletins/openssl-security-advisory/" title="Amazon Linux AMI">Amazon Linux AMI</a></li> 
!-->
		</ul>
		<h2 id="problem">Problem</h2>

		<p>A. The attacker could send an excessively large OCSP Status Request extension to cause a Denial of Service attack to the server. </p>

		<h2 id="q-how-does-the-vulnerability-work">Q. How does the vulnerability work?</h2>

		<p>A. The attacker could use the TLS extension "TLSEXT_TYPE_status_request" and fill the OCSP ids with continually renegotiation. </p>

		<h2 id="q-what-versions-of-openssl-are-affected">Q. What versions of OpenSSL are affected?</h2>

		<p>A. Affected Versions:</p>

		<ul>
			<li>OpenSSL 0.9.8h through 0.9.8v</li>
			<li>OpenSSL 1.0.1 through 1.0.1t</li>
			<li>OpenSSL 1.0.2 through 1.0.1h</li>
			<li>OpenSSL 1.1.0</li>
		</ul>

		<p>Not Affected Versions:</p>

		<ul>
			<li>OpenSSL 1.0.1u</li>
		    <li>OpenSSL 1.0.2i</li>
		    <li>OpenSSL 1.1.0a</li>
		</ul>


		<h2 id="q-what-are-the-risks">Q. What are the risks?</h2>
		<p>A. The attacker could request renegotiation with a large OCSP Status Request extension continually thus causing unbounded memory allocation on the server. This will eventually lead to a DoS attack through memory 
exhaustion. Servers with default configuration are vulnerable even if they do not support OCSP. Build using the "no-ocsp" option will be not affected.  </p>
	

		<h2 id="q-how-can-i-prevent-the-attacks">Q. How to prevent the attacks?</h2>

		<p>A. Upgrade to the latest version.</p>

        <h2 id="q-how-widespread-is-this">Q. How widespread is this?</h2>

		<p>A. We only test some notable softwares, include OpenSSL Server, Nginx，and Apache. OpenSSL Server with default configuration are affected(Include:OpenSSL 0.9.8h through 0.9.8v、OpenSSL 1.0.1 through 1.0.1t、OpenSSL 1.0.2 through 1.0.1h、OpenSSL 1.1.0).
            Nginx version before 0.8.23 are affected. Apache version before 2.0 are affected, and Apache setting configuration option "SSLInsecureRenegotiation" with "on" are also affected.
         </p>

		<h2 id="q-do-i-have-to-re-create-my-private-keys-or-certificates">Q. Do I need to regenerate my private keys or certificates?</h2>
		<p>A. No. Attackers could not steal your private keys through this vulnerability. </p>

		<h2 id="q-is-ccs-injection-because-of-an-ssltls-specification-defect">Q. Is this because of an SSL/TLS specification defect?</h2>
		<p>A. No. It is an implementation problem of OpenSSL.</p>

		<h2 id="q-what-protocol-versions-are-affected">Q. What protocol versions are affected?</h2>
		<p>A. All versions (SSL3.0, TLS1.0, TLS1.1, TLS1.2) are affected.</p>

		<h2 id="q-what-encryption-algorithms-are-affected">Q. What encryption algorithms are affected?</h2>
		<p>A. All encryption algorithms are affected. This bug is not related to any specific algorithms. </p>

		<h2 id="q-can-i-detect-if-someone-has-exploited-this-against-me">Q. Can I be aware of this kind of attack when it is happening?</h2>
		<p>A. It's hard to say, maybe you can find this by analyzing crash dump.</p>



		<h2 id="q-how-did-you-find-this-bug">Q. How did you find this bug?</h2>
		<p>A. This bug was discovered by Shi Lei of the Gear Team, Qihoo 360 Inc. while doing code review.</p>

		<h2 id="q-how-do-you-report-this-vulnerability">Q. How did you handle this vulnerability?</h2>

		<p>A. We reported it to the official after we found this vulnerability.</p>

		<h2 id="references">References</h2>

		<ul>
		  	<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-6304">CVE-2016-6304</a></li>
		  	<li><a href="https://www.openssl.org/news/secadv/20160922.txt">OpenSSL</a></li>
            <!--
		  	<li><a href="http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-6304">NIST</a></li>
		  	<li><a href="http://www.kb.cert.org/vuls/id/978508">CERT/CC (USA)</a></li>
            -->
		</ul>

		<p>You can use this logo under the terms of <a href="http://creativecommons.org/publicdomain/zero/1.0/">CC0</a>. <a href="logo.svg">download logo in SVG format</a></p>

		<h2 id="Acknowledgements">Acknowledgements</h2>
		<ul>
			<li>We were very grateful to the <a href="http://ccsinjection.lepidum.co.jp/">CCS Injection</a> team for sharing us their template.</li>
			<li>We were grateful to the Qihoo360 Information Security Department, NetOPS, Qiyun, and Hulk team for their help.</li>
		</ul>

		<h2 id="change-history">Change History</h2>
		<ul>
		  	<li>First Version: (Thursday, 22 September 2016 18:55:00 +0800)</li>
		</ul>

	</div>
	<footer>
		<div class="copyright">
		    <p style="float: left;"> Qihoo 360 Co. Ltd.
		  		<span style="margin-left: 10px">Contact : <a href="mailto:g-cloud-sec@360.cn">g-cloud-sec@360.cn</a></span><br>Copyright © 2016 Qihoo 360 Co. Ltd. All rights reserved.
		    </p>
		    <div style="float: right;"><img src="logo01.png" class="site_logo"></a></div>
		</div>
	</footer>
</body>
</html>
